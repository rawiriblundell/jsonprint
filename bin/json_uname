#!/bin/bash

# A simple demonstration of 'uname' with json output
# Unfortunately as spaces are littered right throughout its output,
# 'uname -a' is not parsable.  This means multiple uname calls instead.  Ugh.
# We also attempt to provide for POSIX, GNU/Linux and Solaris

# A simple aesthetic function to give another name for '.'
# shellcheck disable=SC1090
include() { . "${1}" || exit 1; }

include ../lib/jsonprint.sh

json_open
  json_obj_open uname
    json_str nodename "$(uname -n)"
    json_str_append os_kernel "$(uname -s)"
    uname -o >/dev/null 2>&1 && json_str_append os_name "$(uname -o)"
    json_str_append os_version "$(uname -v)"
    json_str_append release_level "$(uname -r)"
    json_str_append hardware_type "$(uname -m)"
    uname -i >/dev/null 2>&1 && json_str_append platform "$(uname -i)"
    uname -p >/dev/null 2>&1 && json_str_append processor "$(uname -p)"
  json_obj_close
json_close